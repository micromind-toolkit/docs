Search.setIndex({"docnames": ["contribution", "index", "micromind", "micromind.networks", "micromind.utils", "modules"], "filenames": ["contribution.rst", "index.rst", "micromind.rst", "micromind.networks.rst", "micromind.utils.rst", "modules.rst"], "titles": ["Guide for Contributing to micromind", "Welcome to micromind\u2019s documentation!", "micromind package", "micromind.networks package", "micromind.utils package", "micromind"], "terms": {"To": 0, "ensur": 0, "ar": [0, 2], "conflict": 0, "between": [0, 1, 3], "differ": [0, 2], "librari": 0, "version": 0, "ci": 0, "pipelin": 0, "work": 0, "same": 0, "both": 0, "local": 0, "onlin": 0, "": [0, 2, 3, 4], "recommend": 0, "dedic": 0, "after": 0, "anaconda": 0, "you": [0, 1, 2], "can": [0, 1, 2], "achiev": 0, "thi": [0, 1, 2, 3], "conda": 0, "n": 0, "python": [0, 1], "8": [0, 1], "option": [0, 2], "replac": [0, 2], "name": [0, 2], "prefer": 0, "star": 0, "project": 0, "without": 0, "ani": 0, "limit": 0, "relat": 0, "access": [0, 2], "offici": [0, 1], "have": 0, "clone": 0, "navig": 0, "root": 0, "folder": 0, "edit": 0, "mode": [0, 2, 4], "us": [0, 2], "follow": 0, "command": [0, 2], "pip": 0, "e": [0, 2], "convers": [0, 1, 2], "featur": 0, "give": 0, "signific": 0, "might": 0, "pertain": 0, "patch": 0, "bug": 0, "fix": 0, "re": [0, 3], "git": 0, "checkout": 0, "b": 0, "your": [0, 1, 2], "On": 0, "unleash": 0, "creativ": 0, "commit": 0, "all": [0, 1, 3], "modif": 0, "normal": 0, "would": 0, "befor": [0, 2], "being": 0, "merg": 0, "code": [0, 1, 3], "need": [0, 1, 2, 3], "pass": [0, 2, 3], "modifi": 0, "codebas": 0, "doe": 0, "so": 0, "pre": 0, "hook": [0, 3], "configur": [0, 2], "set": [0, 2], "decid": 0, "should": [0, 2, 3], "run": [0, 1, 2, 3], "insid": [0, 1], "everi": [0, 2, 3], "time": 0, "repo": 0, "pytest": 0, "moreov": 0, "write": 0, "addit": 0, "requir": 0, "onc": 0, "complet": 0, "pleas": 0, "toolkit": [0, 1], "here": [0, 1], "some": 0, "guidelin": 0, "good": 0, "adapt": 0, "github": 0, "blog": 0, "post": 0, "reason": 0, "clearli": 0, "explain": 0, "why": 0, "what": 0, "valu": [0, 2], "bring": 0, "made": 0, "describ": 0, "behavior": 0, "error": 0, "been": 0, "ad": 0, "By": 0, "ll": 0, "well": 0, "equip": 0, "meaning": 0, "happi": 0, "i": [1, 2], "repositori": 1, "aim": 1, "bridg": 1, "two": 1, "commun": 1, "artifici": 1, "intellig": 1, "embed": [1, 3], "system": 1, "base": [1, 2, 3, 4], "pytorch": [1, 2], "provid": [1, 2], "export": [1, 2, 5], "support": [1, 2], "model": [1, 2, 3, 4], "onnx": [1, 2], "intel": 1, "openvino": [1, 2], "tflite": [1, 2], "smooth": 1, "flow": 1, "from": [1, 2, 3], "research": 1, "deploy": [1, 2], "multimedia": 1, "analyt": 1, "recip": [1, 3], "imag": 1, "classif": 1, "sound": 1, "event": 1, "detect": 1, "etc": [1, 4], "detail": 1, "api": 1, "tutori": 1, "first": 1, "3": [1, 2, 3], "later": 1, "open": 1, "termin": 1, "full": 1, "If": [1, 2], "want": 1, "launch": 1, "simpl": 1, "train": [1, 2, 3, 5], "an": [1, 2], "just": 1, "defin": [1, 2, 3], "class": [1, 2, 3, 4], "extend": 1, "modul": [1, 5], "phinet": [1, 2, 5], "forward": [1, 2, 3, 5], "method": [1, 2], "wai": 1, "which": [1, 2], "calcul": [1, 2], "loss": [1, 2], "function": [1, 2, 3, 4], "take": [1, 3], "care": [1, 3], "rest": 1, "imageclassif": 1, "def": [1, 2], "__init__": 1, "self": 1, "arg": 1, "kwarg": [1, 3], "super": 1, "classifi": 1, "32": 1, "include_top": [1, 3], "true": [1, 2, 3], "num_class": [1, 3], "10": [1, 3, 4], "batch": [1, 2], "return": [1, 2, 3], "0": [1, 2, 3], "compute_loss": [1, 2, 5], "pred": [1, 2], "nn": [1, 2], "crossentropyloss": 1, "1": [1, 2, 3], "afterward": [1, 3], "format": [1, 2], "like": 1, "best": 1, "m": 1, "output_onnx": 1, "link": 1, "file": 1, "our": 1, "illustr": 1, "packag": [1, 5], "index": 1, "search": 1, "page": 1, "guid": 1, "step": [1, 2], "prepar": 1, "environ": 1, "creat": [1, 2], "fork": 1, "origin": 1, "2": [1, 2, 3], "new": 1, "branch": 1, "4": 1, "implement": [1, 2, 3], "chang": 1, "5": [1, 2, 3, 4], "unit": 1, "test": [1, 2, 5], "linter": 1, "check": 1, "6": [1, 3], "make": 1, "pull": 1, "request": 1, "helper": [2, 5], "out": 2, "box": 2, "multi": 2, "gpu": 2, "fp16": 2, "hf": 2, "acceler": 2, "much": 2, "more": 2, "author": [2, 3, 4], "francesco": [2, 3, 4], "paissan": [2, 3, 4], "2023": [2, 3, 4], "metric": [2, 5], "str": [2, 3, 4], "fn": 2, "callabl": 2, "reduct": 2, "mean": 2, "sourc": [2, 3, 4], "object": [2, 4], "track": 2, "evalu": 2, "dure": 2, "allow": 2, "custom": 2, "comput": [2, 3], "specifi": 2, "paramet": [2, 3], "The": 2, "A": 2, "given": 2, "predict": 2, "data": 2, "sum": 2, "default": 2, "reduc": [2, 5], "histori": 2, "call": [2, 3], "clear": 2, "torch": [2, 3], "tensor": [2, 3], "exampl": [2, 3], "import": [2, 3], "stage": [2, 5], "custom_metr": 2, "5000": 2, "fals": [2, 3], "ground": 2, "truth": 2, "target": 2, "current": 2, "g": 2, "devic": 2, "perform": [2, 3], "cpu": 2, "hparam": 2, "none": [2, 3], "abc": 2, "abstract": 2, "deep": 2, "learn": 2, "handl": 2, "via": 2, "ddp": 2, "other": 2, "distribut": 2, "strategi": 2, "It": 2, "automat": 2, "manag": 2, "capabl": 2, "namespac": 2, "hyperparamet": 2, "cost": 2, "optim": [2, 4], "process": 2, "backward": 2, "overwritten": 2, "specif": 2, "applic": 2, "union": 2, "tupl": [2, 3, 4], "output": [2, 3], "dataload": 2, "type": [2, 3], "configure_optim": [2, 5], "task": 2, "adam": 2, "lr": 2, "001": 2, "either": 2, "argument": 2, "line": 2, "overwrit": 2, "entir": 2, "rate": 2, "schedul": 2, "yet": 2, "save_dir": 2, "path": [2, 4], "out_format": 2, "input_shap": [2, 3], "linux": 2, "machin": 2, "directori": 2, "where": 2, "save": [2, 4], "input": [2, 3], "shape": 2, "creation": 2, "get": 2, "infer": 2, "depend": 2, "load_modul": [2, 5], "checkpoint_path": [2, 4], "load": 2, "checkpoint": [2, 5], "store": 2, "on_train_end": [2, 5], "end": 2, "each": 2, "clean": 2, "up": 2, "exit": 2, "on_train_start": [2, 5], "initi": [2, 3], "put": 2, "network": [2, 5], "right": 2, "alreadi": 2, "present": 2, "execut": [2, 3], "begin": 2, "set_input_shap": [2, 5], "224": [2, 3], "setter": 2, "dataset": 2, "dict": [2, 3, 4], "epoch": 2, "int": [2, 3, 4], "list": [2, 3], "debug": 2, "bool": [2, 3], "number": [2, 3], "valid": [2, 5], "dictionari": [2, 3], "loader": 2, "map": 2, "kei": [2, 4], "val": [2, 5], "empti": 2, "whether": 2, "onli": 2, "few": 2, "enum": 2, "standard": 2, "alberto": [2, 3], "ancilotto": [2, 3], "convert_to_onnx": [2, 5], "net": 2, "save_path": 2, "simplifi": 2, "replace_forward": 2, "convert_to_openvino": [2, 5], "convert_to_tflit": [2, 5], "batch_quant": 2, "tf_lite": 2, "quantiz": 2, "submodul": [2, 5], "util": [2, 5], "pars": [2, 5], "http": 3, "doi": 3, "org": 3, "1145": 3, "3510832": 3, "matteo": 3, "beltrami": 3, "tremonti": 3, "depthwiseconv2d": 3, "in_channel": 3, "depth_multipli": 3, "kernel_s": 3, "stride": 3, "pad": 3, "dilat": 3, "bia": 3, "padding_mod": 3, "zero": 3, "conv2d": 3, "group": 3, "out_channel": 3, "output_pad": 3, "transpos": 3, "weight": 3, "num_lay": 3, "7": 3, "alpha": 3, "float": [3, 4], "beta": 3, "t_zero": 3, "compat": 3, "downsampling_lay": 3, "conv5_perc": 3, "first_conv_strid": 3, "residu": 3, "conv2d_input": 3, "pool": 3, "h_swish": 3, "squeeze_excit": 3, "divisor": 3, "x": 3, "logit": 3, "otherwis": 3, "get_mac": 3, "mac": 3, "architectur": 3, "9817670": 3, "get_complex": 3, "complex": 3, "character": 3, "param": 3, "30917": 3, "get_param": 3, "phinetconvblock": 3, "in_shap": 3, "expans": 3, "filter": 3, "has_s": 3, "block_id": 3, "k_size": 3, "dp_rate": 3, "05": 3, "convolut": 3, "block": 3, "ouput": 3, "relumax": 3, "max": 3, "overridden": 3, "subclass": 3, "although": 3, "within": 3, "one": 3, "instanc": 3, "instead": 3, "sinc": 3, "former": 3, "regist": 3, "while": 3, "latter": 3, "silent": 3, "ignor": 3, "them": 3, "seblock": 3, "squeez": 3, "excit": 3, "se": 3, "separableconv2d": 3, "activ": 3, "relu": 3, "correct_pad": 3, "2d": 3, "downsampl": 3, "get_xpansion_factor": 3, "num_block": 3, "factor": 3, "formula": 3, "paper": 3, "preprocess_input": 3, "normalis": 3, "channel": 3, "unwrap": 4, "disk": 4, "state": 4, "min": 4, "top_k": 4, "close": 4, "get_random_str": 4, "length": 4, "get_value_from_kei": 4, "cast": 4, "select_and_load_checkpoint": 4, "parse_argu": 4, "core": 5, "convert": 5, "subpackag": 5}, "objects": {"micromind": [[2, 0, 0, "-", "convert"], [2, 0, 0, "-", "core"]], "micromind.convert": [[2, 1, 1, "", "convert_to_onnx"], [2, 1, 1, "", "convert_to_openvino"], [2, 1, 1, "", "convert_to_tflite"]], "micromind.core": [[2, 2, 1, "", "Metric"], [2, 2, 1, "", "MicroMind"], [2, 2, 1, "", "Stage"]], "micromind.core.Metric": [[2, 3, 1, "", "reduce"]], "micromind.core.MicroMind": [[2, 3, 1, "", "compute_loss"], [2, 3, 1, "", "configure_optimizers"], [2, 3, 1, "", "export"], [2, 3, 1, "", "forward"], [2, 3, 1, "", "load_modules"], [2, 3, 1, "", "on_train_end"], [2, 3, 1, "", "on_train_start"], [2, 3, 1, "", "set_input_shape"], [2, 3, 1, "", "test"], [2, 3, 1, "", "train"], [2, 3, 1, "", "validate"]], "micromind.core.Stage": [[2, 4, 1, "", "test"], [2, 4, 1, "", "train"], [2, 4, 1, "", "val"]], "micromind.networks": [[3, 0, 0, "-", "phinet"]], "micromind.networks.phinet": [[3, 2, 1, "", "DepthwiseConv2d"], [3, 2, 1, "", "PhiNet"], [3, 2, 1, "", "PhiNetConvBlock"], [3, 2, 1, "", "ReLUMax"], [3, 2, 1, "", "SEBlock"], [3, 2, 1, "", "SeparableConv2d"], [3, 1, 1, "", "correct_pad"], [3, 1, 1, "", "get_xpansion_factor"], [3, 1, 1, "", "preprocess_input"]], "micromind.networks.phinet.DepthwiseConv2d": [[3, 4, 1, "", "bias"], [3, 4, 1, "", "dilation"], [3, 4, 1, "", "groups"], [3, 4, 1, "", "in_channels"], [3, 4, 1, "", "kernel_size"], [3, 4, 1, "", "out_channels"], [3, 4, 1, "", "output_padding"], [3, 4, 1, "", "padding"], [3, 4, 1, "", "padding_mode"], [3, 4, 1, "", "stride"], [3, 4, 1, "", "transposed"], [3, 4, 1, "", "weight"]], "micromind.networks.phinet.PhiNet": [[3, 3, 1, "", "forward"], [3, 3, 1, "", "get_MAC"], [3, 3, 1, "", "get_complexity"], [3, 3, 1, "", "get_params"], [3, 4, 1, "", "training"]], "micromind.networks.phinet.PhiNetConvBlock": [[3, 3, 1, "", "forward"], [3, 4, 1, "", "training"]], "micromind.networks.phinet.ReLUMax": [[3, 3, 1, "", "forward"], [3, 4, 1, "", "training"]], "micromind.networks.phinet.SEBlock": [[3, 3, 1, "", "forward"], [3, 4, 1, "", "training"]], "micromind.networks.phinet.SeparableConv2d": [[3, 3, 1, "", "forward"], [3, 4, 1, "", "training"]], "micromind.utils": [[4, 0, 0, "-", "checkpointer"], [4, 0, 0, "-", "helpers"], [4, 0, 0, "-", "parse"]], "micromind.utils.checkpointer": [[4, 2, 1, "", "Checkpointer"]], "micromind.utils.checkpointer.Checkpointer": [[4, 3, 1, "", "close"]], "micromind.utils.helpers": [[4, 1, 1, "", "get_random_string"], [4, 1, 1, "", "get_value_from_key"], [4, 1, 1, "", "select_and_load_checkpoint"]], "micromind.utils.parse": [[4, 1, 1, "", "parse_arguments"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"guid": 0, "contribut": [0, 1], "micromind": [0, 1, 2, 3, 4, 5], "step": 0, "0": 0, "prepar": 0, "environ": 0, "1": 0, "creat": 0, "fork": 0, "from": 0, "origin": 0, "repositori": 0, "2": 0, "instal": [0, 1], "3": 0, "new": 0, "branch": 0, "4": 0, "implement": 0, "chang": 0, "5": 0, "unit": 0, "test": 0, "linter": 0, "check": 0, "6": 0, "make": 0, "pull": 0, "request": 0, "welcom": 1, "": 1, "document": 1, "kei": 1, "featur": 1, "us": 1, "pip": 1, "basic": 1, "how": 1, "content": 1, "indic": 1, "tabl": 1, "To": 1, "packag": [2, 3, 4], "core": 2, "modul": [2, 3, 4], "convert": 2, "subpackag": 2, "network": 3, "submodul": [3, 4], "phinet": 3, "util": 4, "checkpoint": 4, "helper": 4, "pars": 4}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Guide for Contributing to micromind": [[0, "guide-for-contributing-to-micromind"]], "Step 0 - Preparing the Environment": [[0, "step-0-preparing-the-environment"]], "Step 1 - Creating a Fork from the Original Repository": [[0, "step-1-creating-a-fork-from-the-original-repository"]], "Step 2 - Installation": [[0, "step-2-installation"]], "Step 3 - Creating a New Branch": [[0, "step-3-creating-a-new-branch"]], "Step 4 - Implementing Changes": [[0, "step-4-implementing-changes"]], "Step 5 - Unit tests and linters check": [[0, "step-5-unit-tests-and-linters-check"]], "Linters": [[0, "linters"]], "Unit tests": [[0, "unit-tests"]], "Step 6 - Making a Pull Request": [[0, "step-6-making-a-pull-request"]], "Welcome to micromind\u2019s documentation!": [[1, "welcome-to-micromind-s-documentation"]], "Key Features": [[1, "key-features"]], "Installation": [[1, "installation"]], "Using Pip": [[1, "using-pip"]], "Basic how-to": [[1, "basic-how-to"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "How To Contribute": [[1, null]], "micromind package": [[2, "micromind-package"]], "micromind.core module": [[2, "module-micromind.core"]], "micromind.convert module": [[2, "module-micromind.convert"]], "Subpackages": [[2, "subpackages"]], "micromind.networks package": [[3, "micromind-networks-package"]], "Submodules": [[3, "submodules"], [4, "submodules"]], "micromind.networks.phinet module": [[3, "module-micromind.networks.phinet"]], "micromind.utils package": [[4, "micromind-utils-package"]], "micromind.utils.checkpointer module": [[4, "module-micromind.utils.checkpointer"]], "micromind.utils.helpers module": [[4, "module-micromind.utils.helpers"]], "micromind.utils.parse module": [[4, "module-micromind.utils.parse"]], "micromind": [[5, "micromind"]]}, "indexentries": {"metric (class in micromind.core)": [[2, "micromind.core.Metric"]], "micromind (class in micromind.core)": [[2, "micromind.core.MicroMind"]], "stage (class in micromind.core)": [[2, "micromind.core.Stage"]], "compute_loss() (micromind.core.micromind method)": [[2, "micromind.core.MicroMind.compute_loss"]], "configure_optimizers() (micromind.core.micromind method)": [[2, "micromind.core.MicroMind.configure_optimizers"]], "convert_to_onnx() (in module micromind.convert)": [[2, "micromind.convert.convert_to_onnx"]], "convert_to_openvino() (in module micromind.convert)": [[2, "micromind.convert.convert_to_openvino"]], "convert_to_tflite() (in module micromind.convert)": [[2, "micromind.convert.convert_to_tflite"]], "export() (micromind.core.micromind method)": [[2, "micromind.core.MicroMind.export"]], "forward() (micromind.core.micromind method)": [[2, "micromind.core.MicroMind.forward"]], "load_modules() (micromind.core.micromind method)": [[2, "micromind.core.MicroMind.load_modules"]], "micromind.convert": [[2, "module-micromind.convert"]], "micromind.core": [[2, "module-micromind.core"]], "module": [[2, "module-micromind.convert"], [2, "module-micromind.core"], [3, "module-micromind.networks.phinet"], [4, "module-micromind.utils.checkpointer"], [4, "module-micromind.utils.helpers"], [4, "module-micromind.utils.parse"]], "on_train_end() (micromind.core.micromind method)": [[2, "micromind.core.MicroMind.on_train_end"]], "on_train_start() (micromind.core.micromind method)": [[2, "micromind.core.MicroMind.on_train_start"]], "reduce() (micromind.core.metric method)": [[2, "micromind.core.Metric.reduce"]], "set_input_shape() (micromind.core.micromind method)": [[2, "micromind.core.MicroMind.set_input_shape"]], "test (micromind.core.stage attribute)": [[2, "micromind.core.Stage.test"]], "test() (micromind.core.micromind method)": [[2, "micromind.core.MicroMind.test"]], "train (micromind.core.stage attribute)": [[2, "micromind.core.Stage.train"]], "train() (micromind.core.micromind method)": [[2, "micromind.core.MicroMind.train"]], "val (micromind.core.stage attribute)": [[2, "micromind.core.Stage.val"]], "validate() (micromind.core.micromind method)": [[2, "micromind.core.MicroMind.validate"]], "depthwiseconv2d (class in micromind.networks.phinet)": [[3, "micromind.networks.phinet.DepthwiseConv2d"]], "phinet (class in micromind.networks.phinet)": [[3, "micromind.networks.phinet.PhiNet"]], "phinetconvblock (class in micromind.networks.phinet)": [[3, "micromind.networks.phinet.PhiNetConvBlock"]], "relumax (class in micromind.networks.phinet)": [[3, "micromind.networks.phinet.ReLUMax"]], "seblock (class in micromind.networks.phinet)": [[3, "micromind.networks.phinet.SEBlock"]], "separableconv2d (class in micromind.networks.phinet)": [[3, "micromind.networks.phinet.SeparableConv2d"]], "bias (micromind.networks.phinet.depthwiseconv2d attribute)": [[3, "micromind.networks.phinet.DepthwiseConv2d.bias"]], "correct_pad() (in module micromind.networks.phinet)": [[3, "micromind.networks.phinet.correct_pad"]], "dilation (micromind.networks.phinet.depthwiseconv2d attribute)": [[3, "micromind.networks.phinet.DepthwiseConv2d.dilation"]], "forward() (micromind.networks.phinet.phinet method)": [[3, "micromind.networks.phinet.PhiNet.forward"]], "forward() (micromind.networks.phinet.phinetconvblock method)": [[3, "micromind.networks.phinet.PhiNetConvBlock.forward"]], "forward() (micromind.networks.phinet.relumax method)": [[3, "micromind.networks.phinet.ReLUMax.forward"]], "forward() (micromind.networks.phinet.seblock method)": [[3, "micromind.networks.phinet.SEBlock.forward"]], "forward() (micromind.networks.phinet.separableconv2d method)": [[3, "micromind.networks.phinet.SeparableConv2d.forward"]], "get_mac() (micromind.networks.phinet.phinet method)": [[3, "micromind.networks.phinet.PhiNet.get_MAC"]], "get_complexity() (micromind.networks.phinet.phinet method)": [[3, "micromind.networks.phinet.PhiNet.get_complexity"]], "get_params() (micromind.networks.phinet.phinet method)": [[3, "micromind.networks.phinet.PhiNet.get_params"]], "get_xpansion_factor() (in module micromind.networks.phinet)": [[3, "micromind.networks.phinet.get_xpansion_factor"]], "groups (micromind.networks.phinet.depthwiseconv2d attribute)": [[3, "micromind.networks.phinet.DepthwiseConv2d.groups"]], "in_channels (micromind.networks.phinet.depthwiseconv2d attribute)": [[3, "micromind.networks.phinet.DepthwiseConv2d.in_channels"]], "kernel_size (micromind.networks.phinet.depthwiseconv2d attribute)": [[3, "micromind.networks.phinet.DepthwiseConv2d.kernel_size"]], "micromind.networks.phinet": [[3, "module-micromind.networks.phinet"]], "out_channels (micromind.networks.phinet.depthwiseconv2d attribute)": [[3, "micromind.networks.phinet.DepthwiseConv2d.out_channels"]], "output_padding (micromind.networks.phinet.depthwiseconv2d attribute)": [[3, "micromind.networks.phinet.DepthwiseConv2d.output_padding"]], "padding (micromind.networks.phinet.depthwiseconv2d attribute)": [[3, "micromind.networks.phinet.DepthwiseConv2d.padding"]], "padding_mode (micromind.networks.phinet.depthwiseconv2d attribute)": [[3, "micromind.networks.phinet.DepthwiseConv2d.padding_mode"]], "preprocess_input() (in module micromind.networks.phinet)": [[3, "micromind.networks.phinet.preprocess_input"]], "stride (micromind.networks.phinet.depthwiseconv2d attribute)": [[3, "micromind.networks.phinet.DepthwiseConv2d.stride"]], "training (micromind.networks.phinet.phinet attribute)": [[3, "micromind.networks.phinet.PhiNet.training"]], "training (micromind.networks.phinet.phinetconvblock attribute)": [[3, "micromind.networks.phinet.PhiNetConvBlock.training"]], "training (micromind.networks.phinet.relumax attribute)": [[3, "micromind.networks.phinet.ReLUMax.training"]], "training (micromind.networks.phinet.seblock attribute)": [[3, "micromind.networks.phinet.SEBlock.training"]], "training (micromind.networks.phinet.separableconv2d attribute)": [[3, "micromind.networks.phinet.SeparableConv2d.training"]], "transposed (micromind.networks.phinet.depthwiseconv2d attribute)": [[3, "micromind.networks.phinet.DepthwiseConv2d.transposed"]], "weight (micromind.networks.phinet.depthwiseconv2d attribute)": [[3, "micromind.networks.phinet.DepthwiseConv2d.weight"]], "checkpointer (class in micromind.utils.checkpointer)": [[4, "micromind.utils.checkpointer.Checkpointer"]], "close() (micromind.utils.checkpointer.checkpointer method)": [[4, "micromind.utils.checkpointer.Checkpointer.close"]], "get_random_string() (in module micromind.utils.helpers)": [[4, "micromind.utils.helpers.get_random_string"]], "get_value_from_key() (in module micromind.utils.helpers)": [[4, "micromind.utils.helpers.get_value_from_key"]], "micromind.utils.checkpointer": [[4, "module-micromind.utils.checkpointer"]], "micromind.utils.helpers": [[4, "module-micromind.utils.helpers"]], "micromind.utils.parse": [[4, "module-micromind.utils.parse"]], "parse_arguments() (in module micromind.utils.parse)": [[4, "micromind.utils.parse.parse_arguments"]], "select_and_load_checkpoint() (in module micromind.utils.helpers)": [[4, "micromind.utils.helpers.select_and_load_checkpoint"]]}})